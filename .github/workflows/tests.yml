name: APICenter Tests

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "*.txt"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "*.txt"
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.0
          virtualenvs-create: true
          virtualenvs-in-project: false
          
      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install dependencies and ruff
        run: |
          poetry install --no-interaction
          poetry run pip install ruff
        
      - name: Run linting with ruff
        run: |
          poetry run ruff check apicenter tests
          
  test:
    name: Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.0
          virtualenvs-create: true
          virtualenvs-in-project: false
          
      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}
          
      - name: Install dependencies
        run: poetry install --no-interaction
        
      - name: Run tests with coverage
        run: |
          poetry run python tests/run_tests.py --coverage --show-slow
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          files: .coverage
          verbose: true
          
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-report
          path: tests/coverage_html/
          retention-days: 7 